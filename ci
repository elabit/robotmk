#!/bin/bash

main() {
	topdir="$(git rev-parse --show-toplevel)"
	self="${topdir}/ci"
	cargo_toml_path="${topdir}/v2/robotmk/Cargo.toml"
	checkmk_extensions_dir="${topdir}/checkmk_extensions"
	mode="${1}"
	shift

	case "${mode}" in
	'cargo-fmt-check')
		cargo fmt --manifest-path "${cargo_toml_path}" -- --check
		;;

	'cargo-clippy')
		cargo clippy --manifest-path "${cargo_toml_path}" --all-targets -- --deny warnings
		;;

	'cargo-test')
		cargo test --manifest-path "${cargo_toml_path}" --all-targets
		;;

	'PSScriptAnalyzer-check-all')
		pwsh_output=$(pwsh -Command "Invoke-ScriptAnalyzer -Settings ${topdir}/PSScriptAnalyzerSettings.psd1 -Path ${checkmk_extensions_dir} -Recurse")
		pwsh_exitcode="$?"
		if [ "${pwsh_exitcode}" -eq 0 ]; then {
			if [ -z "${pwsh_output}" ]; then {
				echo "No static Powershell issues found"
				return 0
			} else {
				echo "${pwsh_output}"
				return 1
			}
			fi
		} else {
			echo "${pwsh_output}"
			return "${pwsh_exitcode}"
		}
		fi
		;;

	'check-all')
		exit_code=0
		for rust_step in fmt-check clippy test
		do
			"${self}" "cargo-${rust_step}"
			exit_code=$(( exit_code + $? ))
		done
		"${self}" "PSScriptAnalyzer-check-all"
		return "$(( exit_code + $? ))"
		;;

	*)
		echo "Unknown mode: ${mode}" 1>&2
		return 1
		;;
	esac

	return "$?"
}

main "$@"
exit "$?"
